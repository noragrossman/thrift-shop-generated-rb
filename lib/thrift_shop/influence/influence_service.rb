#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'thrift_shop/influence/influence_types'

module ThriftShop
  module Influence
    module InfluenceService
      class Client
        include ::Thrift::Client

        def get_score(headers, entity_uuid)
          send_get_score(headers, entity_uuid)
          return recv_get_score()
        end

        def send_get_score(headers, entity_uuid)
          send_message('get_score', Get_score_args, :headers => headers, :entity_uuid => entity_uuid)
        end

        def recv_get_score()
          result = receive_message(Get_score_result)
          return result.success unless result.success.nil?
          raise result.unauthorized_exception unless result.unauthorized_exception.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_score failed: unknown result')
        end

        def receive_event_bus_message_parcel(headers, message_parcel)
          send_receive_event_bus_message_parcel(headers, message_parcel)
          recv_receive_event_bus_message_parcel()
        end

        def send_receive_event_bus_message_parcel(headers, message_parcel)
          send_message('receive_event_bus_message_parcel', Receive_event_bus_message_parcel_args, :headers => headers, :message_parcel => message_parcel)
        end

        def recv_receive_event_bus_message_parcel()
          result = receive_message(Receive_event_bus_message_parcel_result)
          return
        end

      end

      class Processor
        include ::Thrift::Processor

        def process_get_score(seqid, iprot, oprot)
          args = read_args(iprot, Get_score_args)
          result = Get_score_result.new()
          begin
            result.success = @handler.get_score(args.headers, args.entity_uuid)
          rescue ::ThriftShop::Shared::UnauthorizedException => unauthorized_exception
            result.unauthorized_exception = unauthorized_exception
          end
          write_result(result, oprot, 'get_score', seqid)
        end

        def process_receive_event_bus_message_parcel(seqid, iprot, oprot)
          args = read_args(iprot, Receive_event_bus_message_parcel_args)
          result = Receive_event_bus_message_parcel_result.new()
          @handler.receive_event_bus_message_parcel(args.headers, args.message_parcel)
          write_result(result, oprot, 'receive_event_bus_message_parcel', seqid)
        end

      end

      # HELPER FUNCTIONS AND STRUCTURES

      class Get_score_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        HEADERS = 1
        ENTITY_UUID = 3

        FIELDS = {
          HEADERS => {:type => ::Thrift::Types::STRUCT, :name => 'headers', :class => ::ThriftShop::Shared::RequestHeaders},
          ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'entity_uuid'}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Get_score_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0
        UNAUTHORIZED_EXCEPTION = 1

        FIELDS = {
          SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::ThriftShop::Influence::InfluenceScore},
          UNAUTHORIZED_EXCEPTION => {:type => ::Thrift::Types::STRUCT, :name => 'unauthorized_exception', :class => ::ThriftShop::Shared::UnauthorizedException}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Receive_event_bus_message_parcel_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        HEADERS = 1
        MESSAGE_PARCEL = 2

        FIELDS = {
          HEADERS => {:type => ::Thrift::Types::STRUCT, :name => 'headers', :class => ::ThriftShop::Shared::RequestHeaders},
          MESSAGE_PARCEL => {:type => ::Thrift::Types::STRUCT, :name => 'message_parcel', :class => ::ThriftShop::EventBus::MessageParcel}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Receive_event_bus_message_parcel_result
        include ::Thrift::Struct, ::Thrift::Struct_Union

        FIELDS = {

        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

    end

  end
end
