#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'thrift_shop/shared/shared_types'
require 'thrift_shop/event_bus/event_bus_types'


module ThriftShop
  module Campaign
    module IdeologyBucket
      EXTREMELY_LIBERAL = 1
      MODERATELY_LIBERAL = 2
      NEUTRAL = 3
      MODERATELY_CONSERVATIVE = 4
      EXTREMELY_CONSERVATIVE = 5
      VALUE_MAP = {1 => "EXTREMELY_LIBERAL", 2 => "MODERATELY_LIBERAL", 3 => "NEUTRAL", 4 => "MODERATELY_CONSERVATIVE", 5 => "EXTREMELY_CONSERVATIVE"}
      VALID_VALUES = Set.new([EXTREMELY_LIBERAL, MODERATELY_LIBERAL, NEUTRAL, MODERATELY_CONSERVATIVE, EXTREMELY_CONSERVATIVE]).freeze
    end

    module GetCampaignSupportersSortField
      CREATED_AT = 0
      VALUE_MAP = {0 => "CREATED_AT"}
      VALID_VALUES = Set.new([CREATED_AT]).freeze
    end

    class Campaign
      include ::Thrift::Struct, ::Thrift::Struct_Union
      UID = 1
      NAME = 3
      LEADER_ENTITY_UUID = 4
      MISSION = 5
      IMAGE = 6
      LAUNCHED_AT = 7
      TOPIC_UIDS = 8
      IDEOLOGY_BUCKETS = 10

      FIELDS = {
        UID => {:type => ::Thrift::Types::STRING, :name => 'uid'},
        NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
        LEADER_ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'leader_entity_uuid'},
        MISSION => {:type => ::Thrift::Types::STRING, :name => 'mission'},
        IMAGE => {:type => ::Thrift::Types::STRING, :name => 'image'},
        LAUNCHED_AT => {:type => ::Thrift::Types::STRING, :name => 'launched_at', :optional => true},
        TOPIC_UIDS => {:type => ::Thrift::Types::LIST, :name => 'topic_uids', :element => {:type => ::Thrift::Types::STRING}},
        IDEOLOGY_BUCKETS => {:type => ::Thrift::Types::LIST, :name => 'ideology_buckets', :element => {:type => ::Thrift::Types::I32, :enum_class => ::ThriftShop::Campaign::IdeologyBucket}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CampaignSupporter
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ENTITY_UUID = 1
      CAMPAIGN_UID = 2
      CREATED_AT = 4

      FIELDS = {
        ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'entity_uuid'},
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'},
        CREATED_AT => {:type => ::Thrift::Types::STRING, :name => 'created_at'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CampaignUpdate
      include ::Thrift::Struct, ::Thrift::Struct_Union
      UID = 1
      CAMPAIGN_UID = 2
      TITLE = 3
      IMAGE = 4
      VIDEO = 5
      BODY = 6
      RICH_TEXT_BODY = 8
      CREATED_AT = 7
      EMAIL_CTA_TEXT = 9
      EMAIL_CTA_URL = 10
      EMAIL_SNIPPET = 11

      FIELDS = {
        UID => {:type => ::Thrift::Types::STRING, :name => 'uid'},
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'},
        TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
        IMAGE => {:type => ::Thrift::Types::STRING, :name => 'image', :optional => true},
        VIDEO => {:type => ::Thrift::Types::STRING, :name => 'video', :optional => true},
        BODY => {:type => ::Thrift::Types::STRING, :name => 'body'},
        RICH_TEXT_BODY => {:type => ::Thrift::Types::STRING, :name => 'rich_text_body', :optional => true},
        CREATED_AT => {:type => ::Thrift::Types::STRING, :name => 'created_at'},
        EMAIL_CTA_TEXT => {:type => ::Thrift::Types::STRING, :name => 'email_cta_text', :optional => true},
        EMAIL_CTA_URL => {:type => ::Thrift::Types::STRING, :name => 'email_cta_url', :optional => true},
        EMAIL_SNIPPET => {:type => ::Thrift::Types::STRING, :name => 'email_snippet'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CampaignPoll
      include ::Thrift::Struct, ::Thrift::Struct_Union
      UID = 1
      CAMPAIGN_UID = 2
      POSITION_UID = 3
      CREATED_AT = 4

      FIELDS = {
        UID => {:type => ::Thrift::Types::STRING, :name => 'uid'},
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'},
        POSITION_UID => {:type => ::Thrift::Types::STRING, :name => 'position_uid'},
        CREATED_AT => {:type => ::Thrift::Types::STRING, :name => 'created_at'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CampaignPolls
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_POLLS = 1

      FIELDS = {
        CAMPAIGN_POLLS => {:type => ::Thrift::Types::LIST, :name => 'campaign_polls', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ThriftShop::Campaign::CampaignPoll}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class PaginatedCampaigns
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGE_INFO = 1
      CAMPAIGNS = 2

      FIELDS = {
        PAGE_INFO => {:type => ::Thrift::Types::STRUCT, :name => 'page_info', :class => ::ThriftShop::Shared::BoundaryLimitPageInfo},
        CAMPAIGNS => {:type => ::Thrift::Types::LIST, :name => 'campaigns', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ThriftShop::Campaign::Campaign}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class PaginatedCampaignUids
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGE_INFO = 1
      CAMPAIGN_UIDS = 2

      FIELDS = {
        PAGE_INFO => {:type => ::Thrift::Types::STRUCT, :name => 'page_info', :class => ::ThriftShop::Shared::BoundaryLimitPageInfo},
        CAMPAIGN_UIDS => {:type => ::Thrift::Types::LIST, :name => 'campaign_uids', :element => {:type => ::Thrift::Types::STRING}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class PaginatedCampaignUpdates
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGE_INFO = 1
      CAMPAIGN_UPDATES = 2

      FIELDS = {
        PAGE_INFO => {:type => ::Thrift::Types::STRUCT, :name => 'page_info', :class => ::ThriftShop::Shared::BoundaryLimitPageInfo},
        CAMPAIGN_UPDATES => {:type => ::Thrift::Types::LIST, :name => 'campaign_updates', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ThriftShop::Campaign::CampaignUpdate}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class PaginatedCampaignPolls
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGE_INFO = 1
      CAMPAIGN_POLLS = 2

      FIELDS = {
        PAGE_INFO => {:type => ::Thrift::Types::STRUCT, :name => 'page_info', :class => ::ThriftShop::Shared::BoundaryLimitPageInfo},
        CAMPAIGN_POLLS => {:type => ::Thrift::Types::LIST, :name => 'campaign_polls', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ThriftShop::Campaign::CampaignPoll}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class PaginatedSupporterUids
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGE_INFO = 1
      SUPPORTER_UIDS = 2

      FIELDS = {
        PAGE_INFO => {:type => ::Thrift::Types::STRUCT, :name => 'page_info', :class => ::ThriftShop::Shared::BoundaryLimitPageInfo},
        SUPPORTER_UIDS => {:type => ::Thrift::Types::LIST, :name => 'supporter_uids', :element => {:type => ::Thrift::Types::STRING}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class PaginatedCampaignSupporters
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGE_INFO = 1
      CAMPAIGN_SUPPORTERS = 2

      FIELDS = {
        PAGE_INFO => {:type => ::Thrift::Types::STRUCT, :name => 'page_info', :class => ::ThriftShop::Shared::BoundaryLimitPageInfo},
        CAMPAIGN_SUPPORTERS => {:type => ::Thrift::Types::LIST, :name => 'campaign_supporters', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ThriftShop::Campaign::CampaignSupporter}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class PaginatedEventUids
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGE_INFO = 1
      EVENT_UIDS = 2

      FIELDS = {
        PAGE_INFO => {:type => ::Thrift::Types::STRUCT, :name => 'page_info', :class => ::ThriftShop::Shared::BoundaryLimitPageInfo},
        EVENT_UIDS => {:type => ::Thrift::Types::LIST, :name => 'event_uids', :element => {:type => ::Thrift::Types::STRING}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetSupportedCampaignUidsFilterParams
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UIDS = 1

      FIELDS = {
        CAMPAIGN_UIDS => {:type => ::Thrift::Types::LIST, :name => 'campaign_uids', :element => {:type => ::Thrift::Types::STRING}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetCampaignPollsFilterParams
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UIDS = 1

      FIELDS = {
        CAMPAIGN_UIDS => {:type => ::Thrift::Types::LIST, :name => 'campaign_uids', :element => {:type => ::Thrift::Types::STRING}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetCampaignSupportersFilterParams
      include ::Thrift::Struct, ::Thrift::Struct_Union
      JOINED_SINCE = 3
      CAMPAIGN_UIDS = 2

      FIELDS = {
        JOINED_SINCE => {:type => ::Thrift::Types::STRING, :name => 'joined_since'},
        CAMPAIGN_UIDS => {:type => ::Thrift::Types::LIST, :name => 'campaign_uids', :element => {:type => ::Thrift::Types::STRING}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetCampaignSupportersSortParams
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SORT_FIELD = 1
      SORT_ORDER = 2

      FIELDS = {
        SORT_FIELD => {:type => ::Thrift::Types::I32, :name => 'sort_field', :enum_class => ::ThriftShop::Campaign::GetCampaignSupportersSortField},
        SORT_ORDER => {:type => ::Thrift::Types::I32, :name => 'sort_order', :enum_class => ::ThriftShop::Shared::SortOrder}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @sort_field.nil? || ::ThriftShop::Campaign::GetCampaignSupportersSortField::VALID_VALUES.include?(@sort_field)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field sort_field!')
        end
        unless @sort_order.nil? || ::ThriftShop::Shared::SortOrder::VALID_VALUES.include?(@sort_order)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field sort_order!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

    class AddPetitionRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UID = 1
      PETITION_UID = 2

      FIELDS = {
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'},
        PETITION_UID => {:type => ::Thrift::Types::STRING, :name => 'petition_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CreateCampaignRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      NAME = 2
      LEADER_ENTITY_UUID = 3
      MISSION = 4
      IMAGE = 5
      TOPIC_UIDS = 6
      IDEOLOGY_BUCKETS = 8

      FIELDS = {
        NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
        LEADER_ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'leader_entity_uuid'},
        MISSION => {:type => ::Thrift::Types::STRING, :name => 'mission'},
        IMAGE => {:type => ::Thrift::Types::STRING, :name => 'image'},
        TOPIC_UIDS => {:type => ::Thrift::Types::LIST, :name => 'topic_uids', :element => {:type => ::Thrift::Types::STRING}},
        IDEOLOGY_BUCKETS => {:type => ::Thrift::Types::LIST, :name => 'ideology_buckets', :element => {:type => ::Thrift::Types::I32, :enum_class => ::ThriftShop::Campaign::IdeologyBucket}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CreateCampaignSupporterRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ENTITY_UUID = 1
      CAMPAIGN_UID = 2

      FIELDS = {
        ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'entity_uuid'},
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CreateCampaignUpdateRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UID = 1
      TITLE = 2
      IMAGE = 3
      VIDEO = 4
      BODY = 5
      RICH_TEXT_BODY = 6
      EMAIL_CTA_TEXT = 7
      EMAIL_CTA_URL = 8
      EMAIL_SNIPPET = 9

      FIELDS = {
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'},
        TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
        IMAGE => {:type => ::Thrift::Types::STRING, :name => 'image', :optional => true},
        VIDEO => {:type => ::Thrift::Types::STRING, :name => 'video', :optional => true},
        BODY => {:type => ::Thrift::Types::STRING, :name => 'body'},
        RICH_TEXT_BODY => {:type => ::Thrift::Types::STRING, :name => 'rich_text_body', :optional => true},
        EMAIL_CTA_TEXT => {:type => ::Thrift::Types::STRING, :name => 'email_cta_text', :optional => true},
        EMAIL_CTA_URL => {:type => ::Thrift::Types::STRING, :name => 'email_cta_url', :optional => true},
        EMAIL_SNIPPET => {:type => ::Thrift::Types::STRING, :name => 'email_snippet'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CreateCampaignPollRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UID = 1
      POSITION_UID = 2

      FIELDS = {
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'},
        POSITION_UID => {:type => ::Thrift::Types::STRING, :name => 'position_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class DeleteCampaignSupporterRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ENTITY_UUID = 1
      CAMPAIGN_UID = 2

      FIELDS = {
        ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'entity_uuid'},
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class DeleteCampaignUpdateRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UPDATE_UID = 1

      FIELDS = {
        CAMPAIGN_UPDATE_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_update_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class EditCampaignRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      UID = 1
      NAME = 2
      LEADER_ENTITY_UUID = 3
      MISSION = 4
      IMAGE = 5
      TOPIC_UIDS = 6
      IDEOLOGY_BUCKETS = 8

      FIELDS = {
        UID => {:type => ::Thrift::Types::STRING, :name => 'uid'},
        NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
        LEADER_ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'leader_entity_uuid', :optional => true},
        MISSION => {:type => ::Thrift::Types::STRING, :name => 'mission', :optional => true},
        IMAGE => {:type => ::Thrift::Types::STRING, :name => 'image', :optional => true},
        TOPIC_UIDS => {:type => ::Thrift::Types::LIST, :name => 'topic_uids', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
        IDEOLOGY_BUCKETS => {:type => ::Thrift::Types::LIST, :name => 'ideology_buckets', :element => {:type => ::Thrift::Types::I32, :enum_class => ::ThriftShop::Campaign::IdeologyBucket}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class EditCampaignUpdateRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      UID = 1
      TITLE = 2
      IMAGE = 3
      VIDEO = 4
      BODY = 5
      RICH_TEXT_BODY = 6
      EMAIL_CTA_TEXT = 7
      EMAIL_CTA_URL = 8
      EMAIL_SNIPPET = 9

      FIELDS = {
        UID => {:type => ::Thrift::Types::STRING, :name => 'uid'},
        TITLE => {:type => ::Thrift::Types::STRING, :name => 'title', :optional => true},
        IMAGE => {:type => ::Thrift::Types::STRING, :name => 'image', :optional => true},
        VIDEO => {:type => ::Thrift::Types::STRING, :name => 'video', :optional => true},
        BODY => {:type => ::Thrift::Types::STRING, :name => 'body', :optional => true},
        RICH_TEXT_BODY => {:type => ::Thrift::Types::STRING, :name => 'rich_text_body', :optional => true},
        EMAIL_CTA_TEXT => {:type => ::Thrift::Types::STRING, :name => 'email_cta_text', :optional => true},
        EMAIL_CTA_URL => {:type => ::Thrift::Types::STRING, :name => 'email_cta_url', :optional => true},
        EMAIL_SNIPPET => {:type => ::Thrift::Types::STRING, :name => 'email_snippet', :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetCampaignForPetitionRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PETITION_UID = 1

      FIELDS = {
        PETITION_UID => {:type => ::Thrift::Types::STRING, :name => 'petition_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetCampaignsRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UIDS = 1
      LAUNCHED = 2
      PAGINATION_PARAMS = 3

      FIELDS = {
        CAMPAIGN_UIDS => {:type => ::Thrift::Types::LIST, :name => 'campaign_uids', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
        LAUNCHED => {:type => ::Thrift::Types::BOOL, :name => 'launched', :optional => true},
        PAGINATION_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'pagination_params', :class => ::ThriftShop::Shared::BoundaryLimitPaginationParams}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetCampaignUpdatesRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UID = 1
      CAMPAIGN_UPDATE_UIDS = 2
      PAGINATION_PARAMS = 3

      FIELDS = {
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid', :optional => true},
        CAMPAIGN_UPDATE_UIDS => {:type => ::Thrift::Types::LIST, :name => 'campaign_update_uids', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
        PAGINATION_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'pagination_params', :class => ::ThriftShop::Shared::BoundaryLimitPaginationParams}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CampaignPollUniqueIdentifiers < ::Thrift::Union
      include ::Thrift::Struct_Union
      class << self
        def campaign_poll_uids(val)
          CampaignPollUniqueIdentifiers.new(:campaign_poll_uids, val)
        end
      end

      CAMPAIGN_POLL_UIDS = 2

      FIELDS = {
        CAMPAIGN_POLL_UIDS => {:type => ::Thrift::Types::LIST, :name => 'campaign_poll_uids', :element => {:type => ::Thrift::Types::STRING}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise(StandardError, 'Union fields are not set.') if get_set_field.nil? || get_value.nil?
      end

      ::Thrift::Union.generate_accessors self
    end

    class GetCampaignPollsByIdentifiersRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_POLL_IDENTIFIERS = 2

      FIELDS = {
        CAMPAIGN_POLL_IDENTIFIERS => {:type => ::Thrift::Types::STRUCT, :name => 'campaign_poll_identifiers', :class => ::ThriftShop::Campaign::CampaignPollUniqueIdentifiers}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetCampaignPollsRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGINATION_PARAMS = 1
      FILTER_PARAMS = 2

      FIELDS = {
        PAGINATION_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'pagination_params', :class => ::ThriftShop::Shared::BoundaryLimitPaginationParams},
        FILTER_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'filter_params', :class => ::ThriftShop::Campaign::GetCampaignPollsFilterParams}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetPetitionUidsRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UID = 1
      CAMPAIGN_UIDS = 2

      FIELDS = {
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid', :optional => true},
        CAMPAIGN_UIDS => {:type => ::Thrift::Types::LIST, :name => 'campaign_uids', :element => {:type => ::Thrift::Types::STRING}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetSupportedCampaignUidsRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGINATION_PARAMS = 1
      ENTITY_UUID = 2
      FILTER_PARAMS = 3

      FIELDS = {
        PAGINATION_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'pagination_params', :class => ::ThriftShop::Shared::BoundaryLimitPaginationParams},
        ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'entity_uuid'},
        FILTER_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'filter_params', :class => ::ThriftShop::Campaign::GetSupportedCampaignUidsFilterParams}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetSupporterUidsRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UID = 1
      PAGINATION_PARAMS = 2

      FIELDS = {
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'},
        PAGINATION_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'pagination_params', :class => ::ThriftShop::Shared::BoundaryLimitPaginationParams}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetCampaignSupportersRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGINATION_PARAMS = 1
      FILTER_PARAMS = 2
      SORT_PARAMS = 3

      FIELDS = {
        PAGINATION_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'pagination_params', :class => ::ThriftShop::Shared::BoundaryLimitPaginationParams},
        FILTER_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'filter_params', :class => ::ThriftShop::Campaign::GetCampaignSupportersFilterParams},
        SORT_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'sort_params', :class => ::ThriftShop::Campaign::GetCampaignSupportersSortParams}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class LaunchCampaignRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UID = 1

      FIELDS = {
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class TriggerCampaignPollNotificationRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_POLL_UID = 1

      FIELDS = {
        CAMPAIGN_POLL_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_poll_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetIdeologyBucketsRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UID = 1

      FIELDS = {
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetEventUidsRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PAGE_INFO = 1
      CAMPAIGN_UID = 2

      FIELDS = {
        PAGE_INFO => {:type => ::Thrift::Types::STRUCT, :name => 'page_info', :class => ::ThriftShop::Shared::BoundaryLimitPaginationParams},
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
