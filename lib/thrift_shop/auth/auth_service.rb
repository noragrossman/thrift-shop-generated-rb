#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'thrift_shop/auth/auth_types'

module ThriftShop
  module Auth
    module AuthService
      class Client
        include ::Thrift::Client

        def create_user_web_oauth_tokens(headers, request)
          send_create_user_web_oauth_tokens(headers, request)
          return recv_create_user_web_oauth_tokens()
        end

        def send_create_user_web_oauth_tokens(headers, request)
          send_message('create_user_web_oauth_tokens', Create_user_web_oauth_tokens_args, :headers => headers, :request => request)
        end

        def recv_create_user_web_oauth_tokens()
          result = receive_message(Create_user_web_oauth_tokens_result)
          return result.success unless result.success.nil?
          raise result.argument_exception unless result.argument_exception.nil?
          raise result.unauthorized_exception unless result.unauthorized_exception.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'create_user_web_oauth_tokens failed: unknown result')
        end

      end

      class Processor
        include ::Thrift::Processor

        def process_create_user_web_oauth_tokens(seqid, iprot, oprot)
          args = read_args(iprot, Create_user_web_oauth_tokens_args)
          result = Create_user_web_oauth_tokens_result.new()
          begin
            result.success = @handler.create_user_web_oauth_tokens(args.headers, args.request)
          rescue ::ThriftShop::Shared::ArgumentException => argument_exception
            result.argument_exception = argument_exception
          rescue ::ThriftShop::Shared::UnauthorizedException => unauthorized_exception
            result.unauthorized_exception = unauthorized_exception
          end
          write_result(result, oprot, 'create_user_web_oauth_tokens', seqid)
        end

      end

      # HELPER FUNCTIONS AND STRUCTURES

      class Create_user_web_oauth_tokens_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        HEADERS = 1
        REQUEST = 2

        FIELDS = {
          HEADERS => {:type => ::Thrift::Types::STRUCT, :name => 'headers', :class => ::ThriftShop::Shared::RequestHeaders},
          REQUEST => {:type => ::Thrift::Types::STRUCT, :name => 'request', :class => ::ThriftShop::Auth::CreateUserWebOauthTokensRequest}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Create_user_web_oauth_tokens_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0
        ARGUMENT_EXCEPTION = 1
        UNAUTHORIZED_EXCEPTION = 2

        FIELDS = {
          SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::ThriftShop::Auth::OauthTokens},
          ARGUMENT_EXCEPTION => {:type => ::Thrift::Types::STRUCT, :name => 'argument_exception', :class => ::ThriftShop::Shared::ArgumentException},
          UNAUTHORIZED_EXCEPTION => {:type => ::Thrift::Types::STRUCT, :name => 'unauthorized_exception', :class => ::ThriftShop::Shared::UnauthorizedException}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

    end

  end
end
