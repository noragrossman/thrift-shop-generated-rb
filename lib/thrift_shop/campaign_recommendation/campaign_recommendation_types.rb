#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'thrift_shop/shared/shared_types'
require 'thrift_shop/event_bus/event_bus_types'


module ThriftShop
  module CampaignRecommendation
    module PositionAgreement
      AGREE = 1
      DISAGREE = 2
      UNSURE = 3
      VALUE_MAP = {1 => "AGREE", 2 => "DISAGREE", 3 => "UNSURE"}
      VALID_VALUES = Set.new([AGREE, DISAGREE, UNSURE]).freeze
    end

    class CampaignRecommendation
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CAMPAIGN_UID = 1
      SCORE = 2

      FIELDS = {
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'},
        SCORE => {:type => ::Thrift::Types::DOUBLE, :name => 'score'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class RulePosition
      include ::Thrift::Struct, ::Thrift::Struct_Union
      POSITION_UID = 1
      AGREEMENT = 2

      FIELDS = {
        POSITION_UID => {:type => ::Thrift::Types::STRING, :name => 'position_uid'},
        AGREEMENT => {:type => ::Thrift::Types::I32, :name => 'agreement', :enum_class => ::ThriftShop::CampaignRecommendation::PositionAgreement}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @agreement.nil? || ::ThriftShop::CampaignRecommendation::PositionAgreement::VALID_VALUES.include?(@agreement)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field agreement!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CampaignRecommendationRule
      include ::Thrift::Struct, ::Thrift::Struct_Union
      UID = 1
      NAME = 2
      DESCRIPTION = 3
      CAMPAIGN_UID = 4
      SCORE = 5
      RULE_POSITIONS = 6

      FIELDS = {
        UID => {:type => ::Thrift::Types::STRING, :name => 'uid'},
        NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
        DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description'},
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'},
        SCORE => {:type => ::Thrift::Types::DOUBLE, :name => 'score'},
        RULE_POSITIONS => {:type => ::Thrift::Types::LIST, :name => 'rule_positions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ThriftShop::CampaignRecommendation::RulePosition}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CreateRuleRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      NAME = 1
      DESCRIPTION = 2
      CAMPAIGN_UID = 3
      SCORE = 4
      RULE_POSITIONS = 5

      FIELDS = {
        NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
        DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true},
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid'},
        SCORE => {:type => ::Thrift::Types::DOUBLE, :name => 'score'},
        RULE_POSITIONS => {:type => ::Thrift::Types::LIST, :name => 'rule_positions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ThriftShop::CampaignRecommendation::RulePosition}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class DeleteRuleRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RULE_UID = 1

      FIELDS = {
        RULE_UID => {:type => ::Thrift::Types::STRING, :name => 'rule_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetCampaignRecommendationsRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ENTITY_UUID = 1

      FIELDS = {
        ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'entity_uuid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetRulesFilterParams
      include ::Thrift::Struct, ::Thrift::Struct_Union
      UIDS = 1
      NAMES = 2
      CAMPAIGN_UIDS = 3
      POSITION_UIDS = 4

      FIELDS = {
        UIDS => {:type => ::Thrift::Types::LIST, :name => 'uids', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
        NAMES => {:type => ::Thrift::Types::LIST, :name => 'names', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
        CAMPAIGN_UIDS => {:type => ::Thrift::Types::LIST, :name => 'campaign_uids', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
        POSITION_UIDS => {:type => ::Thrift::Types::LIST, :name => 'position_uids', :element => {:type => ::Thrift::Types::STRING}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetRulesRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      FILTER_PARAMS = 1

      FIELDS = {
        FILTER_PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'filter_params', :class => ::ThriftShop::CampaignRecommendation::GetRulesFilterParams, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class UpdateRuleRequest
      include ::Thrift::Struct, ::Thrift::Struct_Union
      UID = 1
      NAME = 2
      DESCRIPTION = 3
      CAMPAIGN_UID = 4
      SCORE = 5
      RULE_POSITIONS = 6

      FIELDS = {
        UID => {:type => ::Thrift::Types::STRING, :name => 'uid'},
        NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
        DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true},
        CAMPAIGN_UID => {:type => ::Thrift::Types::STRING, :name => 'campaign_uid', :optional => true},
        SCORE => {:type => ::Thrift::Types::DOUBLE, :name => 'score', :optional => true},
        RULE_POSITIONS => {:type => ::Thrift::Types::LIST, :name => 'rule_positions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ThriftShop::CampaignRecommendation::RulePosition}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
