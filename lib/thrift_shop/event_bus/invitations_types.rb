#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'thrift_shop/event_bus/eb_shared_types'
require 'thrift_shop/contact_types/contact_types_types'
require 'thrift_shop/invitation/invitation_types'
require 'thrift_shop/shared/shared_types'


module ThriftShop
  module EventBus
    class Invitee < ::Thrift::Union
      include ::Thrift::Struct_Union
      class << self
        def entity_uuid(val)
          Invitee.new(:entity_uuid, val)
        end

        def email_address(val)
          Invitee.new(:email_address, val)
        end

        def phone_number(val)
          Invitee.new(:phone_number, val)
        end

        def causes_user_uid(val)
          Invitee.new(:causes_user_uid, val)
        end
      end

      ENTITY_UUID = 1
      EMAIL_ADDRESS = 2
      PHONE_NUMBER = 4
      CAUSES_USER_UID = 3

      FIELDS = {
        ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'entity_uuid', :optional => true},
        EMAIL_ADDRESS => {:type => ::Thrift::Types::STRING, :name => 'email_address', :optional => true},
        PHONE_NUMBER => {:type => ::Thrift::Types::STRING, :name => 'phone_number', :optional => true},
        CAUSES_USER_UID => {:type => ::Thrift::Types::STRING, :name => 'causes_user_uid', :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise(StandardError, 'Union fields are not set.') if get_set_field.nil? || get_value.nil?
      end

      ::Thrift::Union.generate_accessors self
    end

    class InvitationCreated
      include ::Thrift::Struct, ::Thrift::Struct_Union
      INVITATION_UID = 1
      INVITEE = 2
      INVITER_ENTITY_UUID = 3
      CONTACT_INSTANCE_UID = 4
      CONTACT_UID = 10
      INVITATION_TYPE_NAME = 5
      TARGET_TYPE = 6
      TARGET_UID = 7
      INVITATION_CREATED_AT = 8
      INVITATION_TYPE = 9

      FIELDS = {
        INVITATION_UID => {:type => ::Thrift::Types::STRING, :name => 'invitation_uid'},
        INVITEE => {:type => ::Thrift::Types::STRUCT, :name => 'invitee', :class => ::ThriftShop::EventBus::Invitee},
        INVITER_ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'inviter_entity_uuid'},
        CONTACT_INSTANCE_UID => {:type => ::Thrift::Types::STRING, :name => 'contact_instance_uid', :optional => true},
        CONTACT_UID => {:type => ::Thrift::Types::STRING, :name => 'contact_uid', :optional => true},
        INVITATION_TYPE_NAME => {:type => ::Thrift::Types::STRING, :name => 'invitation_type_name'},
        TARGET_TYPE => {:type => ::Thrift::Types::STRING, :name => 'target_type'},
        TARGET_UID => {:type => ::Thrift::Types::STRING, :name => 'target_uid', :optional => true},
        INVITATION_CREATED_AT => {:type => ::Thrift::Types::STRING, :name => 'invitation_created_at'},
        INVITATION_TYPE => {:type => ::Thrift::Types::I32, :name => 'invitation_type', :enum_class => ::ThriftShop::Invitation::InvitationTypeName}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @invitation_type.nil? || ::ThriftShop::Invitation::InvitationTypeName::VALID_VALUES.include?(@invitation_type)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field invitation_type!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

    class InvitationAccepted
      include ::Thrift::Struct, ::Thrift::Struct_Union
      INVITATION_UID = 1
      INVITEE_ENTITY_UUID = 2
      INVITER_ENTITY_UUID = 3
      INVITATION_ACCEPTED_AT = 4
      INVITATION_CONVERSION_UID = 5

      FIELDS = {
        INVITATION_UID => {:type => ::Thrift::Types::STRING, :name => 'invitation_uid'},
        INVITEE_ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'invitee_entity_uuid'},
        INVITER_ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'inviter_entity_uuid'},
        INVITATION_ACCEPTED_AT => {:type => ::Thrift::Types::STRING, :name => 'invitation_accepted_at'},
        INVITATION_CONVERSION_UID => {:type => ::Thrift::Types::STRING, :name => 'invitation_conversion_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class InvitationDeactivated
      include ::Thrift::Struct, ::Thrift::Struct_Union
      INVITATION_UID = 1
      INVITEE_ENTITY_UUID = 2
      INVITER_ENTITY_UUID = 3
      INVITATION_DEACTIVATED_AT = 4

      FIELDS = {
        INVITATION_UID => {:type => ::Thrift::Types::STRING, :name => 'invitation_uid'},
        INVITEE_ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'invitee_entity_uuid'},
        INVITER_ENTITY_UUID => {:type => ::Thrift::Types::STRING, :name => 'inviter_entity_uuid'},
        INVITATION_DEACTIVATED_AT => {:type => ::Thrift::Types::STRING, :name => 'invitation_deactivated_at'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class InvitationConversionChanged
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CHANGE_TYPE = 1
      CHANGED_AT = 2
      INVITATION_CONVERSION = 3
      INVITATION_CONVERSION_UID = 4

      FIELDS = {
        CHANGE_TYPE => {:type => ::Thrift::Types::I32, :name => 'change_type', :enum_class => ::ThriftShop::EventBus::ChangeType},
        CHANGED_AT => {:type => ::Thrift::Types::STRING, :name => 'changed_at'},
        INVITATION_CONVERSION => {:type => ::Thrift::Types::STRUCT, :name => 'invitation_conversion', :class => ::ThriftShop::Invitation::InvitationConversion},
        INVITATION_CONVERSION_UID => {:type => ::Thrift::Types::STRING, :name => 'invitation_conversion_uid'}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @change_type.nil? || ::ThriftShop::EventBus::ChangeType::VALID_VALUES.include?(@change_type)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field change_type!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
