#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'thrift_shop/event_bus/event_bus_types'

module ThriftShop
  module EventBus
    module EventBusService
      class Client
        include ::Thrift::Client

        def publish(headers, message_parcel)
          send_publish(headers, message_parcel)
          recv_publish()
        end

        def send_publish(headers, message_parcel)
          send_message('publish', Publish_args, :headers => headers, :message_parcel => message_parcel)
        end

        def recv_publish()
          result = receive_message(Publish_result)
          raise result.queue_full_exception unless result.queue_full_exception.nil?
          return
        end

      end

      class Processor
        include ::Thrift::Processor

        def process_publish(seqid, iprot, oprot)
          args = read_args(iprot, Publish_args)
          result = Publish_result.new()
          begin
            @handler.publish(args.headers, args.message_parcel)
          rescue ::ThriftShop::EventBus::QueueFullException => queue_full_exception
            result.queue_full_exception = queue_full_exception
          end
          write_result(result, oprot, 'publish', seqid)
        end

      end

      # HELPER FUNCTIONS AND STRUCTURES

      class Publish_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        HEADERS = 2
        MESSAGE_PARCEL = 1

        FIELDS = {
          HEADERS => {:type => ::Thrift::Types::STRUCT, :name => 'headers', :class => ::ThriftShop::Shared::RequestHeaders},
          MESSAGE_PARCEL => {:type => ::Thrift::Types::STRUCT, :name => 'message_parcel', :class => ::ThriftShop::EventBus::MessageParcel}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Publish_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        QUEUE_FULL_EXCEPTION = 1

        FIELDS = {
          QUEUE_FULL_EXCEPTION => {:type => ::Thrift::Types::STRUCT, :name => 'queue_full_exception', :class => ::ThriftShop::EventBus::QueueFullException}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

    end

  end
end
