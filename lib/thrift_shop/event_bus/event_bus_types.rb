#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'thrift_shop/shared/shared_types'
require 'thrift_shop/event_bus/accounts_types'
require 'thrift_shop/event_bus/actions_types'
require 'thrift_shop/event_bus/campaigns_types'
require 'thrift_shop/event_bus/content_topics_types'
require 'thrift_shop/event_bus/entities_types'
require 'thrift_shop/event_bus/groups_types'
require 'thrift_shop/event_bus/invitations_types'
require 'thrift_shop/event_bus/positions_types'
require 'thrift_shop/event_bus/profile_districts_types'
require 'thrift_shop/event_bus/profiles_types'
require 'thrift_shop/event_bus/shares_types'


module ThriftShop
  module EventBus
    class Message < ::Thrift::Union
      include ::Thrift::Struct_Union
      class << self
        def causes_account_linked(val)
          Message.new(:causes_account_linked, val)
        end

        def facebook_account_linked(val)
          Message.new(:facebook_account_linked, val)
        end

        def entity_changed(val)
          Message.new(:entity_changed, val)
        end

        def action_taken(val)
          Message.new(:action_taken, val)
        end

        def action_requested(val)
          Message.new(:action_requested, val)
        end

        def petition_launched(val)
          Message.new(:petition_launched, val)
        end

        def petition_signed(val)
          Message.new(:petition_signed, val)
        end

        def petition_grades_published(val)
          Message.new(:petition_grades_published, val)
        end

        def petition_grading_notifications_triggered(val)
          Message.new(:petition_grading_notifications_triggered, val)
        end

        def campaign_created(val)
          Message.new(:campaign_created, val)
        end

        def campaign_deleted(val)
          Message.new(:campaign_deleted, val)
        end

        def campaign_updated_topics(val)
          Message.new(:campaign_updated_topics, val)
        end

        def campaign_launched(val)
          Message.new(:campaign_launched, val)
        end

        def campaign_update_created(val)
          Message.new(:campaign_update_created, val)
        end

        def campaign_supporter_changed(val)
          Message.new(:campaign_supporter_changed, val)
        end

        def campaign_poll_triggered(val)
          Message.new(:campaign_poll_triggered, val)
        end

        def content_topic_changed(val)
          Message.new(:content_topic_changed, val)
        end

        def invitation_created(val)
          Message.new(:invitation_created, val)
        end

        def invitation_accepted(val)
          Message.new(:invitation_accepted, val)
        end

        def invitation_deactivated(val)
          Message.new(:invitation_deactivated, val)
        end

        def invitation_conversion_changed(val)
          Message.new(:invitation_conversion_changed, val)
        end

        def position_changed(val)
          Message.new(:position_changed, val)
        end

        def position_response_created(val)
          Message.new(:position_response_created, val)
        end

        def position_response_deleted(val)
          Message.new(:position_response_deleted, val)
        end

        def position_response_updated(val)
          Message.new(:position_response_updated, val)
        end

        def profile_district_changed(val)
          Message.new(:profile_district_changed, val)
        end

        def profile_created(val)
          Message.new(:profile_created, val)
        end

        def profile_updated(val)
          Message.new(:profile_updated, val)
        end

        def profile_deleted(val)
          Message.new(:profile_deleted, val)
        end

        def profile_changed(val)
          Message.new(:profile_changed, val)
        end

        def group_membership_changed(val)
          Message.new(:group_membership_changed, val)
        end

        def group_petition_adoption_changed(val)
          Message.new(:group_petition_adoption_changed, val)
        end

        def contact_async_job(val)
          Message.new(:contact_async_job, val)
        end

        def alignment_async_job(val)
          Message.new(:alignment_async_job, val)
        end

        def share_changed(val)
          Message.new(:share_changed, val)
        end

        def share_conversion_changed(val)
          Message.new(:share_conversion_changed, val)
        end
      end

      CAUSES_ACCOUNT_LINKED = 13
      FACEBOOK_ACCOUNT_LINKED = 16
      ENTITY_CHANGED = 26
      ACTION_TAKEN = 1
      ACTION_REQUESTED = 2
      PETITION_LAUNCHED = 8
      PETITION_SIGNED = 9
      PETITION_GRADES_PUBLISHED = 20
      PETITION_GRADING_NOTIFICATIONS_TRIGGERED = 36
      CAMPAIGN_CREATED = 3
      CAMPAIGN_DELETED = 4
      CAMPAIGN_UPDATED_TOPICS = 5
      CAMPAIGN_LAUNCHED = 6
      CAMPAIGN_UPDATE_CREATED = 7
      CAMPAIGN_SUPPORTER_CHANGED = 32
      CAMPAIGN_POLL_TRIGGERED = 34
      CONTENT_TOPIC_CHANGED = 23
      INVITATION_CREATED = 21
      INVITATION_ACCEPTED = 14
      INVITATION_DEACTIVATED = 15
      INVITATION_CONVERSION_CHANGED = 35
      POSITION_CHANGED = 33
      POSITION_RESPONSE_CREATED = 10
      POSITION_RESPONSE_DELETED = 11
      POSITION_RESPONSE_UPDATED = 12
      PROFILE_DISTRICT_CHANGED = 24
      PROFILE_CREATED = 17
      PROFILE_UPDATED = 18
      PROFILE_DELETED = 19
      PROFILE_CHANGED = 27
      GROUP_MEMBERSHIP_CHANGED = 28
      GROUP_PETITION_ADOPTION_CHANGED = 31
      CONTACT_ASYNC_JOB = 22
      ALIGNMENT_ASYNC_JOB = 25
      SHARE_CHANGED = 29
      SHARE_CONVERSION_CHANGED = 30

      FIELDS = {
        CAUSES_ACCOUNT_LINKED => {:type => ::Thrift::Types::STRUCT, :name => 'causes_account_linked', :class => ::ThriftShop::EventBus::CausesAccountLinked, :optional => true},
        FACEBOOK_ACCOUNT_LINKED => {:type => ::Thrift::Types::STRUCT, :name => 'facebook_account_linked', :class => ::ThriftShop::EventBus::FacebookAccountLinked, :optional => true},
        ENTITY_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'entity_changed', :class => ::ThriftShop::EventBus::EntityChanged, :optional => true},
        ACTION_TAKEN => {:type => ::Thrift::Types::STRUCT, :name => 'action_taken', :class => ::ThriftShop::EventBus::ActionTaken, :optional => true},
        ACTION_REQUESTED => {:type => ::Thrift::Types::STRUCT, :name => 'action_requested', :class => ::ThriftShop::EventBus::ActionRequested, :optional => true},
        PETITION_LAUNCHED => {:type => ::Thrift::Types::STRUCT, :name => 'petition_launched', :class => ::ThriftShop::EventBus::PetitionLaunched, :optional => true},
        PETITION_SIGNED => {:type => ::Thrift::Types::STRUCT, :name => 'petition_signed', :class => ::ThriftShop::EventBus::PetitionSigned, :optional => true},
        PETITION_GRADES_PUBLISHED => {:type => ::Thrift::Types::STRUCT, :name => 'petition_grades_published', :class => ::ThriftShop::EventBus::PetitionGradesPublished, :optional => true},
        PETITION_GRADING_NOTIFICATIONS_TRIGGERED => {:type => ::Thrift::Types::STRUCT, :name => 'petition_grading_notifications_triggered', :class => ::ThriftShop::EventBus::PetitionGradingNotificationsTriggered, :optional => true},
        CAMPAIGN_CREATED => {:type => ::Thrift::Types::STRUCT, :name => 'campaign_created', :class => ::ThriftShop::EventBus::CampaignCreated, :optional => true},
        CAMPAIGN_DELETED => {:type => ::Thrift::Types::STRUCT, :name => 'campaign_deleted', :class => ::ThriftShop::EventBus::CampaignDeleted, :optional => true},
        CAMPAIGN_UPDATED_TOPICS => {:type => ::Thrift::Types::STRUCT, :name => 'campaign_updated_topics', :class => ::ThriftShop::EventBus::CampaignUpdatedTopics, :optional => true},
        CAMPAIGN_LAUNCHED => {:type => ::Thrift::Types::STRUCT, :name => 'campaign_launched', :class => ::ThriftShop::EventBus::CampaignLaunched, :optional => true},
        CAMPAIGN_UPDATE_CREATED => {:type => ::Thrift::Types::STRUCT, :name => 'campaign_update_created', :class => ::ThriftShop::EventBus::CampaignUpdateCreated, :optional => true},
        CAMPAIGN_SUPPORTER_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'campaign_supporter_changed', :class => ::ThriftShop::EventBus::CampaignSupporterChanged, :optional => true},
        CAMPAIGN_POLL_TRIGGERED => {:type => ::Thrift::Types::STRUCT, :name => 'campaign_poll_triggered', :class => ::ThriftShop::EventBus::CampaignPollTriggered, :optional => true},
        CONTENT_TOPIC_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'content_topic_changed', :class => ::ThriftShop::EventBus::ContentTopicChanged, :optional => true},
        INVITATION_CREATED => {:type => ::Thrift::Types::STRUCT, :name => 'invitation_created', :class => ::ThriftShop::EventBus::InvitationCreated, :optional => true},
        INVITATION_ACCEPTED => {:type => ::Thrift::Types::STRUCT, :name => 'invitation_accepted', :class => ::ThriftShop::EventBus::InvitationAccepted, :optional => true},
        INVITATION_DEACTIVATED => {:type => ::Thrift::Types::STRUCT, :name => 'invitation_deactivated', :class => ::ThriftShop::EventBus::InvitationDeactivated, :optional => true},
        INVITATION_CONVERSION_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'invitation_conversion_changed', :class => ::ThriftShop::EventBus::InvitationConversionChanged, :optional => true},
        POSITION_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'position_changed', :class => ::ThriftShop::EventBus::PositionChanged, :optional => true},
        POSITION_RESPONSE_CREATED => {:type => ::Thrift::Types::STRUCT, :name => 'position_response_created', :class => ::ThriftShop::EventBus::PositionResponseCreated, :optional => true},
        POSITION_RESPONSE_DELETED => {:type => ::Thrift::Types::STRUCT, :name => 'position_response_deleted', :class => ::ThriftShop::EventBus::PositionResponseDeleted, :optional => true},
        POSITION_RESPONSE_UPDATED => {:type => ::Thrift::Types::STRUCT, :name => 'position_response_updated', :class => ::ThriftShop::EventBus::PositionResponseUpdated, :optional => true},
        PROFILE_DISTRICT_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'profile_district_changed', :class => ::ThriftShop::EventBus::ProfileDistrictChanged, :optional => true},
        PROFILE_CREATED => {:type => ::Thrift::Types::STRUCT, :name => 'profile_created', :class => ::ThriftShop::EventBus::ProfileCreated, :optional => true},
        PROFILE_UPDATED => {:type => ::Thrift::Types::STRUCT, :name => 'profile_updated', :class => ::ThriftShop::EventBus::ProfileUpdated, :optional => true},
        PROFILE_DELETED => {:type => ::Thrift::Types::STRUCT, :name => 'profile_deleted', :class => ::ThriftShop::EventBus::ProfileDeleted, :optional => true},
        PROFILE_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'profile_changed', :class => ::ThriftShop::EventBus::ProfileChanged, :optional => true},
        GROUP_MEMBERSHIP_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'group_membership_changed', :class => ::ThriftShop::EventBus::GroupMembershipChanged, :optional => true},
        GROUP_PETITION_ADOPTION_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'group_petition_adoption_changed', :class => ::ThriftShop::EventBus::GroupPetitionAdoptionChanged, :optional => true},
        CONTACT_ASYNC_JOB => {:type => ::Thrift::Types::STRUCT, :name => 'contact_async_job', :class => ::ThriftShop::Shared::JobExecutionParams, :optional => true},
        ALIGNMENT_ASYNC_JOB => {:type => ::Thrift::Types::STRUCT, :name => 'alignment_async_job', :class => ::ThriftShop::Shared::JobExecutionParams, :optional => true},
        SHARE_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'share_changed', :class => ::ThriftShop::EventBus::ShareChanged, :optional => true},
        SHARE_CONVERSION_CHANGED => {:type => ::Thrift::Types::STRUCT, :name => 'share_conversion_changed', :class => ::ThriftShop::EventBus::ShareConversionChanged, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise(StandardError, 'Union fields are not set.') if get_set_field.nil? || get_value.nil?
      end

      ::Thrift::Union.generate_accessors self
    end

    class MessageParcel
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PUBLISHED_AT = 3
      PUBLISHER = 4
      MESSAGES = 5

      FIELDS = {
        PUBLISHED_AT => {:type => ::Thrift::Types::STRING, :name => 'published_at'},
        PUBLISHER => {:type => ::Thrift::Types::I32, :name => 'publisher', :enum_class => ::ThriftShop::Shared::Service},
        MESSAGES => {:type => ::Thrift::Types::LIST, :name => 'messages', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ThriftShop::EventBus::Message}}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @publisher.nil? || ::ThriftShop::Shared::Service::VALID_VALUES.include?(@publisher)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field publisher!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

    class QueuedMessage
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PUBLISHED_AT = 1
      PUBLISHER = 2
      REQUEST_ID = 3
      REQUEST_CONTEXT = 5
      MESSAGE = 4

      FIELDS = {
        PUBLISHED_AT => {:type => ::Thrift::Types::STRING, :name => 'published_at'},
        PUBLISHER => {:type => ::Thrift::Types::I32, :name => 'publisher', :enum_class => ::ThriftShop::Shared::Service},
        REQUEST_ID => {:type => ::Thrift::Types::STRING, :name => 'request_id'},
        REQUEST_CONTEXT => {:type => ::Thrift::Types::STRUCT, :name => 'request_context', :class => ::ThriftShop::Shared::RequestContext},
        MESSAGE => {:type => ::Thrift::Types::STRUCT, :name => 'message', :class => ::ThriftShop::EventBus::Message}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @publisher.nil? || ::ThriftShop::Shared::Service::VALID_VALUES.include?(@publisher)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field publisher!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

    class QueueFullException < ::Thrift::Exception
      include ::Thrift::Struct, ::Thrift::Struct_Union
      def initialize(message=nil)
        super()
        self.message = message
      end

      MESSAGE = 1

      FIELDS = {
        MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
